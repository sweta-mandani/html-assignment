
@*---------------------------------------------------------------------------------List Of Product View---------------------------------------------------------------------------------*@

@model IPagedList<Product_Management.Models.Product>
@using PagedList.Mvc;
@using PagedList;


@{
    ViewBag.Title = "ListProduct";
    Layout = "~/Views/Shared/Layout1.cshtml";
}


@Html.Raw(TempData["insertmess"])
@Html.Raw(TempData["Delete"])


<h2 style="padding-top:50px;text-align:center;color:black;text-decoration-line:underline">PRODUCT LIST</h2>

<p style="float:right">

    @using (Html.BeginForm("ListProduct", "Home", FormMethod.Get))
    {
        <b> Search By:</b>@Html.RadioButton("SearchBy", "ProductName")<text>ProductName</text>
        @Html.RadioButton("SearchBy", "Categoery ")<text>Categoery</text> <br /><br />

        @Html.TextBox("Search")<input type="submit" value="search" />

    }
</p>

<br />
<br />


@using (Html.BeginForm("Delete", "Home", FormMethod.Post))
{
        <table style="width: 100%;background-color: black; color:white;">
        <tr>
            <th>
                @Html.Label("Select")
            </th>
            <th>
                @Html.ActionLink("ProductName", "ListProduct", new { SortBy = ViewBag.SortProductNameParameter, SearchBy = Request.QueryString["SearchBy"], Search = Request.QueryString["Search"] })
            </th>
            <th>
                @Html.ActionLink("Categoery", "ListProduct", new { SortBy = ViewBag.SortCategoeryParameter, SearchBy = Request.QueryString["SearchBy"], Search = Request.QueryString["Search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Short_Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Small_Image)
            </th>

            <th>
                @Html.Label("Edit")
            </th>
            <th>
                @Html.Label("Delete")
            </th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="3" style="color:red">
                    No Match Found
                </td>
            </tr>
        }
        else
        {

            foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="id" id="id" value="@item.ProductId" />
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Categoery)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Short_Description)
                    </td>
                    <td>
                        <img src="@Url.Content(item.Small_Image)" style="height:70px;width:100px" />
                    </td>
                    <td>
                        @Html.ActionLink("Modify", "Edit", new { id = item.ProductId, @class = "badge badge-warning" })


                    </td>
                    <td>

                        @Html.ActionLink("Remove", "Delete", new { id = item.ProductId, @class = "badge badge-warning" })
                    </td>

                </tr>

            }

        }



    </table>
    <br/>
    <input type="submit" value="Delete" class="btn btn btn-primary" , onclick="return confirm('Are you sure you want to delete record ');" />
}


<div>
    @Html.PagedListPager(Model, i => Url.Action("ListProduct", "Home", new { i, Search = Request.QueryString["Search"], SearchBy = Request.QueryString["SearchBy"], SortBy = Request["SortBy"] }),
      new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



